{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["'use strict'\n\n//  const initialParams = {\n//     key: '41688461-d2a05e0fbe969f7f46dd1fb4f',\n//     q: '',\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: true,\n// }\n\nimport axios from \"axios\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst formElement = document.querySelector('.form');\nconst inputElement = document.querySelector('.input-text');\nconst loadButton = document.querySelector('.load-btn');\nconst galleryElement = document.querySelector('.gallery');\nconst loadingContainer = document.querySelector('.loading-container');\n\nlet page = 1;\nlet perPage = 40;\nlet inputValue = inputElement.value.trim()\n\nconst api = axios.create({\n    baseURL: \"https://pixabay.com/api/\",\n    params: {\n        key: '41688461-d2a05e0fbe969f7f46dd1fb4f',\n        q: '',\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,  \n        page: page,\n        per_page: perPage, \n    }\n})\n\nfunction searchImage(params) {\n    \n    api.get('', {\n        params: params,\n    })\n        .then(response => { \n            const { hits } = response.data;\n\n            if(hits.length > 0) {\n           const rendedImages = hits.reduce((html, \n            {largeImageURL, webformatURL, tags, likes, views, comments, downloads}) => {\n            return html + `\n                <li class='gallery-list'>\n                    <a href='${largeImageURL}'>\n                     <img class='img-element' src='${webformatURL}' alt='${tags}'/>\n                     <div class='gallery-text-wrapper'>\n                     <p>Likes: <span class='img-text'>${likes}</span></p>\n                     <p>Views: <span class='img-text'>${views}</span></p>\n                     <p>Comments: <span class='img-text'>${comments}</span></p>\n                     <p>Downloads: <span class='img-text'>${downloads}</span></p>\n                     </div>\n                    </a>\n                </li>`\n            }, \"\")\n\n            galleryElement.insertAdjacentHTML('beforeend', rendedImages);\n            const simpleBoxContent = new SimpleLightbox ('.gallery a', {\n                captionType: 'attr',\n                captionsData: 'alt',\n                captionDelay: 250, \n                captionPosition: 'bottom',\n                close: true,\n                enableKeyboard: true, \n                docClose: true, \n            })\n\n            simpleBoxContent.refresh();\n            page += 1;\n        } else {\n            iziToast.error({\n                position: 'topRight',\n                message: `Sorry, there are no images matching your search query. Please try again!`,\n            })\n        }\n        })\n        .catch(error => {\n            iziToast.error({\n                title: 'Error',\n                message: error.message,\n                position: 'topRight',\n            })\n        })\n        .finally(() => {\n            loadingContainer.classList.remove('is-open');\n            loadButton.classList.add('is-open');\n        })\n        \n}\n\n    function loadMoreImages() {\n        page += 1;\n        const searchParams = new URLSearchParams({\n            page: page,\n            q: inputValue,\n            ...api.defaults.params,\n        })\n\n        searchImage(searchParams)\n    }\n\n\n    loadButton.addEventListener('click', loadMoreImages)\n\n\n    formElement.addEventListener('submit', event => {\n        event.preventDefault();\n\n        galleryElement.innerHTML = \"\"; \n\n\n        if(galleryElement.innerHTML === \"\") {\n            loadingContainer.classList.add('is-open');\n        }\n\n        const params = {\n            ...api.defaults.params,\n            q: inputElement.value,\n            page: page,\n        }\n        searchImage(params);\n    });\n\n    "],"names":["formElement","inputElement","loadButton","galleryElement","loadingContainer","page","perPage","inputValue","api","axios","searchImage","params","response","hits","rendedImages","html","largeImageURL","webformatURL","tags","likes","views","comments","downloads","SimpleLightbox","iziToast","error","loadMoreImages","searchParams","event"],"mappings":"owBAgBA,MAAMA,EAAc,SAAS,cAAc,OAAO,EAC5CC,EAAe,SAAS,cAAc,aAAa,EACnDC,EAAa,SAAS,cAAc,WAAW,EAC/CC,EAAiB,SAAS,cAAc,UAAU,EAClDC,EAAmB,SAAS,cAAc,oBAAoB,EAEpE,IAAIC,EAAO,EACPC,EAAU,GACVC,EAAaN,EAAa,MAAM,KAAM,EAE1C,MAAMO,EAAMC,EAAM,OAAO,CACrB,QAAS,2BACT,OAAQ,CACJ,IAAK,qCACL,EAAG,GACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMJ,EACN,SAAUC,CACb,CACL,CAAC,EAED,SAASI,EAAYC,EAAQ,CAEzBH,EAAI,IAAI,GAAI,CACR,OAAQG,CAChB,CAAK,EACI,KAAKC,GAAY,CACd,KAAM,CAAE,KAAAC,CAAI,EAAKD,EAAS,KAE1B,GAAGC,EAAK,OAAS,EAAG,CACrB,MAAMC,EAAeD,EAAK,OAAO,CAACE,EACjC,CAAC,cAAAC,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAC9DP,EAAO;AAAA;AAAA,+BAEKC;AAAA,qDACsBC,WAAsBC;AAAA;AAAA,wDAEnBC;AAAA,wDACAC;AAAA,2DACGC;AAAA,4DACCC;AAAA;AAAA;AAAA,uBAI7C,EAAE,EAELnB,EAAe,mBAAmB,YAAaW,CAAY,EAClC,IAAIS,EAAgB,aAAc,CACvD,YAAa,OACb,aAAc,MACd,aAAc,IACd,gBAAiB,SACjB,MAAO,GACP,eAAgB,GAChB,SAAU,EAC1B,CAAa,EAEgB,QAAO,EACxBlB,GAAQ,CACpB,MACYmB,EAAS,MAAM,CACX,SAAU,WACV,QAAS,0EACzB,CAAa,CAEb,CAAS,EACA,MAAMC,GAAS,CACZD,EAAS,MAAM,CACX,MAAO,QACP,QAASC,EAAM,QACf,SAAU,UAC1B,CAAa,CACb,CAAS,EACA,QAAQ,IAAM,CACXrB,EAAiB,UAAU,OAAO,SAAS,EAC3CF,EAAW,UAAU,IAAI,SAAS,CAC9C,CAAS,CAET,CAEI,SAASwB,GAAiB,CACtBrB,GAAQ,EACR,MAAMsB,EAAe,IAAI,gBAAgB,CACrC,KAAMtB,EACN,EAAGE,EACH,GAAGC,EAAI,SAAS,MAC5B,CAAS,EAEDE,EAAYiB,CAAY,CAC3B,CAGDzB,EAAW,iBAAiB,QAASwB,CAAc,EAGnD1B,EAAY,iBAAiB,SAAU4B,GAAS,CAC5CA,EAAM,eAAc,EAEpBzB,EAAe,UAAY,GAGxBA,EAAe,YAAc,IAC5BC,EAAiB,UAAU,IAAI,SAAS,EAG5C,MAAMO,EAAS,CACX,GAAGH,EAAI,SAAS,OAChB,EAAGP,EAAa,MAChB,KAAMI,CACT,EACDK,EAAYC,CAAM,CAC1B,CAAK"}